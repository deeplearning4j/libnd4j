namespace nd4j.graph;

table LongPair {
    first:long; // first
    second:long; // second
}

table IntPair {
    first:int;
    second:int;
}

table IntTriple {
    first:int;
    second:int;
    third:int;
}

enum OpType:byte {
    TRANSFORM = 0,
    ACCUMULATION = 1, // for both reduce & reduce3
    INDEX_ACCUMULATION = 2,
    SCALAR = 3,
    BROADCAST = 4,
//    PAIRWISE = 5, <--- using TRANSFORM instead, for compatibility reasons
//    ACCUMULATION3 = 6, <--- using ACCUMULATION instead, for compatibility reasons
    SUMMARYSTATS = 7,
    SHAPE = 8,
    AGGREGATION = 9, // ???
    CUSTOM = 10, // custom ops
    GRAPH = 11, // another graph used as op
    VARIABLE = 30,
    BOOLEAN = 40, // booleanOps, for conditionals
    LOGIC = 119, //
}

enum InputType:byte {
    UNDEFINED,
    NUMERIC,
    STRINGULAR,
    NUMERIC_SET,
    STRINGULAR_SET,
}

enum OpClass:byte {
    TRANSFORM = 0, // ops of this class return the same shape as primary input
    REDUCTION = 1, // ops of this class return accumulation shape
    MULTIPLICATOR = 2, // ops of this class may return whatever they want
    GRAPH = 3, // embedded graph
    CONDITIONAL = 4, // IF
    LOOP = 5, // Various LOOPS
}